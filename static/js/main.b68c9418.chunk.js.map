{"version":3,"sources":["requests.js","axios.js","components/Row.js","components/Banner.js","components/Nav.js","App.js","index.js"],"names":["API_KEY","request","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchURL","isLargerow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","data","results","console","log","fetchDate","className","map","movie","key","id","onClick","e","movieTrailer","then","url","URLParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","Banner","setMovie","requests","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"8SAAMA,G,MAAU,oCAYDC,EAVC,CACdC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,8CCJLU,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAQ,iC,+BCqEKC,MAjEf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EAChBC,mBAAS,IADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAERF,mBAAS,IAFD,mBAErCG,EAFqC,KAEzBC,EAFyB,KAuC5C,OArBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE0Bb,EAAMc,IAAIT,GAFpC,OAEUf,EAFV,OAGImB,EAAUnB,EAAQyB,KAAKC,SAH3B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,KACC,CAACd,IAWF,yBAAKe,UAAU,OACb,4BAAKhB,GACL,yBAAKgB,UAAU,eACZZ,EAAOa,KAAI,SAACC,GACX,OACE,yBACEC,IAAKD,EAAME,GACXC,QAAS,SAACC,IA3CF,SAACJ,GAEfZ,EAAYC,EAAc,IAG5BgB,KAAkB,OAALL,QAAK,IAALA,OAAA,EAAAA,EAAOlB,QAAS,IAC1BwB,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAEnDtB,EAAcmB,EAAUhB,IAAI,SAE7BoB,OAAM,SAACC,GAAD,OAASlB,QAAQC,IAAIiB,MAkCpBC,CAAYd,IAEdF,UAAS,qBAAgBd,GAAc,oBACvC+B,IAAG,UArDA,wCAqDA,OACD/B,EAAagB,EAAMgB,YAAchB,EAAMiB,eAEzCC,IAAKlB,EAAMmB,WAKlB/B,GAAc,kBAAC,IAAD,CAASgC,QAAShC,EAAYiC,KA7BpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,Q,MCGDC,MAzCf,WAAmB,IAAD,EACUzC,mBAAS,IADnB,mBACTe,EADS,KACF2B,EADE,KAiBhB,OAfArC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIoC,EAAS1D,uBAD3C,OACQF,EADR,OAGE2D,EACE3D,EAAQyB,KAAKC,QACXmC,KAAKC,MAAMD,KAAKE,SAAW/D,EAAQyB,KAAKC,QAAQsC,UALtD,4CADc,uBAAC,WAAD,wBAWdC,KACC,IAEHtC,QAAQC,IAAII,GAEV,4BACEF,UAAU,SACVoC,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,4CAAD,cAA8CpC,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOiB,cAArD,OACfoB,mBAAoB,kBAGtB,yBAAKvC,UAAU,mBACb,wBAAIA,UAAU,iBACN,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOlB,SAAP,OAAgBkB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOmB,QAAvB,OAA+BnB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOsC,gBAEzC,yBAAKxC,UAAU,kBACb,4BAAQA,UAAU,iBAAlB,QACA,4BAAQA,UAAU,iBAAlB,YAEF,wBAAIA,UAAU,sBAAd,OAAoCE,QAApC,IAAoCA,OAApC,EAAoCA,EAAOuC,UAC3C,yBAAKzC,UAAU,0B,MCPR0C,MA7Bf,WAAgB,IAAD,EACWvD,oBAAS,GADpB,mBACNwD,EADM,KACAC,EADA,KAcb,OAXApD,qBAAU,WAMR,OALAqD,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IAAKH,GAAQ,GAC7BA,GAAQ,MAGR,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,yBAAKhD,UAAS,cAAS2C,GAAQ,YAAjB,MACZ,yBACE1B,IAA8B,oBAC9BjB,UAAS,aAEX,yBACEiB,IAA8B,kBAC9BjB,UAAU,iBACVoB,IAAI,gBCaG6B,MAhCf,WAAgB,IAEZ9E,EAQE2D,EARF3D,cACAC,EAOE0D,EAPF1D,sBACAC,EAMEyD,EANFzD,cACAC,EAKEwD,EALFxD,kBACAC,EAIEuD,EAJFvD,kBACAC,EAGEsD,EAHFtD,kBACAC,EAEEqD,EAFFrD,mBACAC,EACEoD,EADFpD,mBAGF,OACE,yBAAKsB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEhB,MAAM,oBACNC,SAAUb,EACVc,YAAU,IAEZ,kBAAC,EAAD,CAAKF,MAAM,eAAeC,SAAUd,IACpC,kBAAC,EAAD,CAAKa,MAAM,YAAYC,SAAUZ,IACjC,kBAAC,EAAD,CAAKW,MAAM,gBAAgBC,SAAUX,IACrC,kBAAC,EAAD,CAAKU,MAAM,gBAAgBC,SAAUV,IACrC,kBAAC,EAAD,CAAKS,MAAM,gBAAgBC,SAAUT,IACrC,kBAAC,EAAD,CAAKQ,MAAM,iBAAiBC,SAAUR,IACtC,kBAAC,EAAD,CAAKO,MAAM,gBAAgBC,SAAUP,MC7B3CwE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b68c9418.chunk.js","sourcesContent":["const API_KEY = \"661a75ab8b22a5595eb69a05357663d6\";\r\n\r\nconst request = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default request;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://api.themoviedb.org/3`,\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios.js\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport \"./Row.css\";\r\n\r\nconst base_URL = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ title, fetchURL, isLargerow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const handleClick = (movie) => {\r\n    //alert(movie);\r\n    if (trailerUrl) setTrailerUrl(\"\");\r\n    else {\r\n      //console.log(movie.name);\r\n      movieTrailer(movie?.title || \"\")\r\n        .then((url) => {\r\n          const URLParams = new URLSearchParams(new URL(url).search);\r\n\r\n          setTrailerUrl(URLParams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function fetchDate() {\r\n      try {\r\n        const request = await axios.get(fetchURL);\r\n        setMovies(request.data.results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    fetchDate();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  //console.table(movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              onClick={(e) => {\r\n                // console.table(movie);\r\n                handleClick(movie);\r\n              }}\r\n              className={`row_poster ${isLargerow && \"row_poster_large\"}`}\r\n              src={`${base_URL}${\r\n                isLargerow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from \"../axios.js\";\r\nimport requests from \"../requests.js\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      //  console.log(request.data.results);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      );\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\") `,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{movie?.overview}</h1>\r\n        <div className=\"banner_fade_bottom\"></div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) setShow(true);\r\n      else setShow(false);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className={`nav ${show && \"nav_black\"} `}>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/netflix_logo.png\"}\r\n        className={`nav_logo`}\r\n      />\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/thumbnaill.jpg\"}\r\n        className=\"thumbnail_logo\"\r\n        alt=\"thumbnail\"\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport requests from \"./requests\";\nimport \"./App.css\";\nimport Row from \"./components/Row.js\";\nimport Banner from \"./components/Banner.js\";\nimport Nav from \"./components/Nav.js\";\n\nfunction App() {\n  const {\n    fetchTrending,\n    fetchNetflixOriginals,\n    fetchTopRated,\n    fetchActionMovies,\n    fetchComedyMovies,\n    fetchHorrorMovies,\n    fetchRomanceMovies,\n    fetchDocumentaries,\n  } = requests;\n  // console.log(fetchNetflixOriginals);\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchURL={fetchNetflixOriginals}\n        isLargerow\n      />\n      <Row title=\"Trending Now\" fetchURL={fetchTrending} />\n      <Row title=\"Top Rated\" fetchURL={fetchTopRated} />\n      <Row title=\"Action Movies\" fetchURL={fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURL={fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchURL={fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}